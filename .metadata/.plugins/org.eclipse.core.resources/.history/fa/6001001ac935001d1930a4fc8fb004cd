package exercises;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.Scanner;

public class Ex2 {
	private char[] encoder = new char[26];
	private char[] decoder = new char[26];

	public Ex2(int rotation) {
		for (int i = 0; i < 26; i++) {
			decoder[i] = (char) ('A' + i);
			encoder[i] = (char) ('A' + (i + rotation + 26) % 26);
		}
	}

	public static void main(String[] args) {
		CeasarCipherFollowMe test = new CeasarCipherFollowMe(3);
		System.out.println(Arrays.toString(test.encoder));
		System.out.println(Arrays.toString(test.decoder));
		System.out.println("Encrypt string \"VENI\": " + test.encrypt("VENI"));
		System.out.println("Decrypt string \"YHQL\": " + test.decrypt("YHQL"));
	}

	public String encrypt(String message) {
		char[] arrayMessage = message.toUpperCase().toCharArray();
		for (int i = 0; i < arrayMessage.length; i++) {
			for (int j = 0; j < decoder.length; j++) {
				if (arrayMessage[i] == decoder[j]) {
					arrayMessage[i] = encoder[j];
					break;
				}
			}
		}
		return new String(arrayMessage);
//		return transform(message, encoder);
	}

	public String decrypt(String secret) {
		char[] arraySecret = secret.toUpperCase().toCharArray();
		for (int i = 0; i < arraySecret.length; i++) {
			for (int j = 0; j < encoder.length; j++) {
				if (arraySecret[i] == encoder[j]) {
					arraySecret[i] = decoder[j];
					break;
				}
			}
		}
		return new String(arraySecret);
//		return transform(secret, decoder);
	}

//	public String transform(String original, char[] code) {
//		char[] msg = original.toCharArray();
//		for (int i = 0; i < msg.length; i++) {
//			if (Character.isUpperCase(msg[i])) {
//				int j = msg[i] - 'A';// will be value from 0 to 25
//				msg[i] = code[j];
//			}
//		}
//		return new String(msg);
//	}

	public static String readTextFile(String s) throws FileNotFoundException {
		File file = new File(s);
		Scanner sc = new Scanner(file);
		StringBuilder stringBuilder = new StringBuilder();
		while (sc.hasNextLine()) {
			stringBuilder.append(sc.nextLine());
		}
		return stringBuilder.toString();
	}
}
