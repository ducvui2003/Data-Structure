package exerceses;

public class Ex2 {
	public static void main(String[] args) {
		System.out.println("Convert \"110110\" ro decimal number: " + binaryToDecimalNotRecursive(110110));
		System.out.println("Convert \"110110\" ro decimal number: " + binaryToDecimalRecursive(110110));
	}

	public static int binaryToDecimalNotRecursive(int binary) {
		char[] arrayBinary = (binary + "").toCharArray();
		int decimal = 0;
		for (int i = 0; i < arrayBinary.length; i++) {
			if (arrayBinary[i] == '1') {
				decimal += 1 * Math.pow(2, arrayBinary.length - i - 1);
			} else {
				if (arrayBinary[i] == '0') {
					decimal += 0 * Math.pow(2, arrayBinary.length - i - 1);
				} else {
					break;
				}
			}
		}
		return decimal;
	}

	public static int binaryToDecimalRecursive(int decimal) {
		char[] decimalArray = ("" + decimal).toCharArray();
		return binaryToDecimalRecursiveTemp(decimalArray, decimalArray.length);
	}

	public static int binaryToDecimalRecursiveTemp(char[] decimalArray, int length) {
		length--;
		if (length == 0) {
			if (decimalArray[length] == '1')
				return 1;
			else
				return 0;
		} else {
			if (decimalArray[length] == '1')
				return (1 * (int) Math.pow(2, length)) + binaryToDecimalRecursiveTemp(decimalArray, length);
			else
				return (0 * (int) Math.pow(2, length)) + binaryToDecimalRecursiveTemp(decimalArray, length);
		}

	}
}
